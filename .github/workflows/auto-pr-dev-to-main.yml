name: "Auto PR: dev to main"

on:
  schedule:
    # At 00:00 on Sunday and Monday
    - cron: '0 0 * * 0,1'
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write
jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Create merge branch with preserved files
        run: |
          echo "Creating merge branch with dev changes and preserved main files..."

          # Set up Git identity
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch dev branch
          git fetch origin dev:dev

          # Show latest commits for debugging
          echo "Latest commit on main:"
          git log main -1 --oneline
          echo "Latest commit on dev:"
          git log dev -1 --oneline

          # Check if there are actually differences
          if git diff --quiet main..dev; then
            echo "No differences found between main and dev"
            echo "skip_pr=true" >> $GITHUB_ENV
            exit 0
          fi

          echo "Differences found between main and dev"
          echo "Files that differ:"
          git diff --name-only main..dev

          # Create a new branch from main
          BRANCH_NAME="auto-merge-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME main
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          # Merge dev into this branch
          git merge dev --no-ff --no-commit || true

          # Now preserve specific files from main (overwrite what came from dev)
          echo "Preserving critical files from main branch..."

          # Preserve workflow files
          if git ls-tree -r main --name-only | grep -q "^\.github/workflows/"; then
            git ls-tree -r main --name-only | grep "^\.github/workflows/" | while read file; do
              echo "Preserving workflow file: $file"
              git show main:$file > $file
              git add $file
            done
          fi

          # Preserve poem.md
          if git show main:poem.md > /dev/null 2>&1; then
            echo "Preserving poem.md from main branch"
            git show main:poem.md > poem.md
            git add poem.md
          fi

          # Complete the merge
          git commit -m "Merge dev into main with preserved workflows and poem.md"

          # Push the branch
          git push origin $BRANCH_NAME

          echo "skip_pr=false" >> $GITHUB_ENV

      - name: Create Pull Request
        run: |
          if [ "$skip_pr" = "true" ]; then
            echo "Skipping PR creation - no differences found"
            exit 0
          fi

          echo "Creating pull request from $BRANCH_NAME to main..."

          gh pr create \
            --base main \
            --head $BRANCH_NAME \
            --title "Automated PR: Merge dev into main (with preserved workflows)" \
            --body "This pull request was automatically created by a scheduled workflow.
          It merges changes from \`dev\` into \`main\` while preserving GitHub Actions workflows.

          **Preserved files:**
          - All \`.github/workflows/\` files from main branch
          - poem.md from main branch

          **Changes included:**
          - All updates from dev branch" \
            --reviewer krugou

          echo "Pull request created successfully!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
