name: "Auto PR: dev to main"

on:
  schedule:
    # At 00:00 on Sunday and Monday
    - cron: '0 0 * * 0,1'
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write
jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Fetch dev branch
        run: git fetch origin dev:dev

      - name: Check for differences
        id: diffcheck
        run: |
          echo "Checking for differences between main and dev branches..."

          # Show current branch and fetch status
          echo "Current branch: $(git branch --show-current)"
          echo "Available branches:"
          git branch -a

          # Show latest commits
          echo "Latest commit on main:"
          git log main -1 --oneline
          echo "Latest commit on dev:"
          git log dev -1 --oneline

          # Check for differences
          if git diff --quiet main..dev; then
            echo "No differences found between main and dev"
            echo "has_diff=false" >> $GITHUB_OUTPUT
          else
            echo "Differences found between main and dev"
            echo "Files that differ:"
            git diff --name-only main..dev
            echo "has_diff=true" >> $GITHUB_OUTPUT
          fi

          # Also check the output value
          echo "Diff check result: $(grep has_diff $GITHUB_OUTPUT || echo 'not set')"

      - name: Debug condition check
        run: |
          echo "Condition evaluation:"
          echo "steps.diffcheck.outputs.has_diff = '${{ steps.diffcheck.outputs.has_diff }}'"
          echo "Condition result: ${{ steps.diffcheck.outputs.has_diff == 'true' }}"

          if [ "${{ steps.diffcheck.outputs.has_diff }}" = "true" ]; then
            echo "Condition is TRUE - will proceed with PR creation"
          else
            echo "Condition is FALSE - will skip PR creation"
          fi

      - name: Switch to dev branch and preserve files
        if: steps.diffcheck.outputs.has_diff == 'true'
        run: |
          echo "Switching to dev branch and preserving files from main..."

          # Switch to dev branch
          git checkout dev

          # First, let's see what files actually need to be preserved
          echo "Checking which files need preservation..."

          # Check if workflows exist in dev vs main
          if [ -d ".github/workflows" ]; then
            echo "Workflows directory exists in dev"
            ls -la .github/workflows/ || echo "No workflow files in dev"
          else
            echo "No workflows directory in dev"
          fi

          # Preserve workflow files from main branch only if they don't exist in dev or are different
          if git ls-tree -r main --name-only | grep -q "^\.github/workflows/"; then
            echo "GitHub Actions workflows found in main branch"

            # Create .github/workflows directory if it doesn't exist
            mkdir -p .github/workflows/

            # Only copy workflow files that don't exist in dev or are different
            git ls-tree -r main --name-only | grep "^\.github/workflows/" | while read file; do
              if [ ! -f "$file" ]; then
                echo "Preserving missing workflow file: $file"
                git show main:$file > $file
              elif ! git show main:$file | cmp -s - $file; then
                echo "Preserving modified workflow file: $file (main version takes precedence)"
                git show main:$file > $file
              else
                echo "Workflow file $file is identical in both branches"
              fi
            done

            echo "GitHub Actions files preservation check completed"
          else
            echo "No GitHub Actions workflows found in main branch to preserve"
          fi

          # Check poem.md preservation
          if git show main:poem.md > /dev/null 2>&1; then
            if [ ! -f "poem.md" ]; then
              echo "Preserving missing poem.md from main branch"
              git show main:poem.md > poem.md
            elif ! git show main:poem.md | cmp -s - poem.md; then
              echo "Preserving modified poem.md from main branch (main version takes precedence)"
              git show main:poem.md > poem.md
            else
              echo "poem.md is identical in both branches"
            fi
          else
            echo "No poem.md found in main branch to preserve"
          fi

          # Show what files have been modified
          echo "Modified files after preservation:"
          git status --porcelain

      - name: Debug before PR creation
        if: steps.diffcheck.outputs.has_diff == 'true'
        run: |
          echo "About to create PR..."
          echo "Current branch: $(git branch --show-current)"
          echo "Current working directory: $(pwd)"
          echo "Git status:"
          git status
          echo "Files in current directory:"
          ls -la
          echo "Modified/new files:"
          git status --porcelain

      - name: Create Pull Request
        if: steps.diffcheck.outputs.has_diff == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Preserve GitHub Actions workflows and poem.md from main branch"
          title: "Automated PR: Merge dev into main (with preserved workflows)"
          body: |
            This pull request was automatically created by a scheduled workflow.
            It merges changes from `dev` into `main` while preserving GitHub Actions workflows.

            **Preserved files:**
            - All `.github/workflows/` files from main branch
            - poem.md from main branch

            **Changes included:**
            - All updates from dev branch
          base: main
          reviewers: krugou
          draft: false

      - name: Debug PR creation result
        if: steps.diffcheck.outputs.has_diff == 'true'
        run: |
          echo "PR creation completed"
          echo "PR number: ${{ steps.cpr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.cpr.outputs.pull-request-url }}"
          echo "PR operation: ${{ steps.cpr.outputs.pull-request-operation }}"
