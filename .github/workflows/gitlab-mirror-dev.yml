name: Mirror GitLab main Branch to dev Branch

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write
jobs:
  mirror-gitlab-main-to-dev:
    runs-on: ubuntu-latest
    env:
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      GITLAB_REPO_URL: ${{ secrets.GITLAB_REPO_URL }}
    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Remove all files except .git
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +

      - name: Clone GitLab main branch
        run: |
          git clone --single-branch --branch devmain --depth 1 "https://oauth2:${GITLAB_TOKEN}@${GITLAB_REPO_URL#https://}" gitlab-src
        continue-on-error: false

      - name: Show latest commit from GitLab
        run: |
          cd gitlab-src
          echo "Latest commit in GitLab on branch:"
          git rev-parse --abbrev-ref HEAD
          git log -1 --oneline || echo "No commits found"
          echo "GitLab commit hash:"
          git rev-parse HEAD
          echo "GitLab commit date:"
          git log -1 --format="%cd" --date=iso
          # Store GitLab timestamp for later comparison
          GITLAB_DATE=$(git log -1 --format="%ct")
          echo "GITLAB_TIMESTAMP=$GITLAB_DATE" >> $GITHUB_ENV
          cd ..

      - name: Check current GitHub dev branch commit date
        run: |
          echo "Current GitHub dev branch commit date:"
          git log -1 --format="%cd" --date=iso || echo "No commits in dev branch"
          echo "Current GitHub dev branch hash:"
          git rev-parse HEAD || echo "No commits in dev branch"
          # Store GitHub timestamp for comparison
          GITHUB_DATE=$(git log -1 --format="%ct" 2>/dev/null || echo "0")
          echo "GITHUB_TIMESTAMP=$GITHUB_DATE" >> $GITHUB_ENV

      - name: Compare dates and determine if force update is needed
        run: |
          echo "GitLab timestamp: $GITLAB_TIMESTAMP"
          echo "GitHub timestamp: $GITHUB_TIMESTAMP"

          if [ "$GITLAB_TIMESTAMP" -gt "$GITHUB_TIMESTAMP" ]; then
            echo "GitLab has newer changes - will force update"
            echo "FORCE_UPDATE=true" >> $GITHUB_ENV
          else
            echo "GitHub is up to date or newer"
            echo "FORCE_UPDATE=false" >> $GITHUB_ENV
          fi

      - name: Copy files from GitLab repo
        run: |
          shopt -s dotglob
          cp -r gitlab-src/* .
          rm -rf gitlab-src

      - name: Check for changes after copy
        run: |
          echo "Files changed after copy:"
          git status --porcelain || echo "No changes detected"
          echo "Current HEAD commit:"
          git rev-parse HEAD
          echo "Differences found:"
          git diff --name-only || echo "No file differences"
          echo "Force update flag: $FORCE_UPDATE"

      - name: Set GitHub remote
        run: |
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: Show repository info
        run: |
          echo "Repository name from environment: $GITHUB_REPOSITORY"
          git remote -v
          git branch -a
          git status
          git config --get remote.origin.url

      - name: Commit and push changes to dev branch
        run: |
          git add .
          echo "Changes to be committed:"
          git diff --cached --name-only || echo "No staged changes"
          echo "Force update flag: $FORCE_UPDATE"

          if [ "$FORCE_UPDATE" = "true" ] || ! git diff --cached --quiet; then
            if [ "$FORCE_UPDATE" = "true" ]; then
              echo "Force updating due to newer GitLab changes"
              git commit -m "Force mirror from GitLab devmain: $(date -u +"%Y-%m-%d %H:%M:%S UTC") - GitLab has newer changes" --allow-empty
            else
              git commit -m "Mirror from GitLab devmain: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
            fi
            echo "Pushing to GitHub dev branch..."
            git push origin dev --force
          else
            echo "No changes to commit and no force update needed"
          fi
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com

      - name: Log success
        run: echo "Mirror from GitLab main branch completed successfully."

    # Error handling is provided by 'continue-on-error: false' and workflow logs.
